{"version":3,"sources":["ByteStream.ts","utils/DicomTagsReference.ts","DicomTag.ts","DicomElement.ts","DicomDataSet.ts","ByteArrayParsers/LittleEndianByteArrayParser.ts","DicomReaders/IDicomReader.ts","utils/DicomConstants.ts","DicomReaders/ExplicitDicomReader.ts","JsDicomParser.ts"],"names":["ByteStream","ByteStream.constructor","ByteStream.seek","ByteStream.readFixedString","ByteStream.readUint16","ByteStream.readUint32","DicomTagsReference","DicomTagsReference.constructor","DicomTagsReference.GetTagName","DicomTag","DicomTag.constructor","DicomTag.getCode","DicomTag.getDicomLookupSearchCode","DicomTag.findName","DicomElement","DicomElement.constructor","DicomDataSet","DicomDataSet.constructor","DicomDataSet.getElementAsString","DicomDataSet.getElementAsUint32","LittleEndianByteArrayParser","LittleEndianByteArrayParser.constructor","LittleEndianByteArrayParser.ReadFixedString","LittleEndianByteArrayParser.readUint16","LittleEndianByteArrayParser.readUint32","DicomConstants","DicomConstants.constructor","ExplicitDicomReader","ExplicitDicomReader.constructor","ExplicitDicomReader.readTag","ExplicitDicomReader.readElement","ExplicitDicomReader._getDataLengthSizeInBytesForVR","JsDicomParser","JsDicomParser.constructor","JsDicomParser.parse","JsDicomParser._readPart10Header","JsDicomParser._checkDicomPrefix"],"mappings":"AAAA,iDAAiD;AACjD,+DAA+D;AAE/D,IAAM,UAAU;IAMZA,SANEA,UAAUA,CAMAA,SAAqBA,EAAEA,eAAiCA,EAAEA,QAAiBA;QACnFC,EAAEA,CAACA,CAACA,SAASA,KAAKA,SAASA,CAACA,CAACA,CAACA;YAC1BA,MAAMA,oDAAoDA,CAACA;QAC/DA,CAACA;QACDA,EAAEA,CAACA,CAACA,CAACA,SAASA,YAAYA,UAAUA,CAACA,KAAKA,KAAKA,CAACA,CAACA,CAACA;YAC9CA,MAAMA,wDAAwDA,CAACA;QACnEA,CAACA;QACDA,EAAEA,CAACA,CAACA,QAAQA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACfA,MAAMA,4CAA4CA,CAACA;QACvDA,CAACA;QACDA,EAAEA,CAACA,CAACA,QAAQA,IAAIA,SAASA,CAACA,MAAMA,CAACA,CAACA,CAACA;YAC/BA,MAAMA,uEAAuEA,CAACA;QAElFA,CAACA;QACDA,EAAEA,CAACA,CAACA,eAAeA,KAAKA,SAASA,CAACA,CAACA,CAACA;YAChCA,MAAMA,0DAA0DA,CAACA;QACrEA,CAACA;QAEDA,IAAIA,CAACA,SAASA,GAAGA,SAASA,CAACA;QAC3BA,IAAIA,CAACA,QAAQA,GAAGA,QAAQA,GAAGA,QAAQA,GAAGA,CAACA,CAACA;QACxCA,IAAIA,CAACA,eAAeA,GAAGA,eAAeA,CAACA;IAC3CA,CAACA;IAEDD,yBAAIA,GAAJA,UAAKA,MAAcA;QACfE,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,GAAGA,MAAMA,GAAGA,CAACA,CAACA,CAACA,CAACA;YAC7BA,MAAMA,yCAAyCA,CAACA;QACpDA,CAACA;QAEDA,IAAIA,CAACA,QAAQA,IAAIA,MAAMA,CAACA;IAC5BA,CAACA;IAEDF,oCAAeA,GAAfA,UAAgBA,MAAcA;QAC1BG,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,eAAeA,CAACA,eAAeA,CAACA,IAAIA,CAACA,SAASA,EAAEA,IAAIA,CAACA,QAAQA,EAAEA,MAAMA,CAACA,CAACA;QACzFA,IAAIA,CAACA,QAAQA,IAAIA,MAAMA,CAACA;QAExBA,MAAMA,CAACA,MAAMA,CAACA;IAClBA,CAACA;IAEDH,+BAAUA,GAAVA;QACII,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,eAAeA,CAACA,UAAUA,CAACA,IAAIA,CAACA,SAASA,EAAEA,IAAIA,CAACA,QAAQA,CAACA,CAACA;QAE5EA,IAAIA,CAACA,QAAQA,IAAIA,CAACA,CAACA;QAEnBA,MAAMA,CAACA,MAAMA,CAACA;IAClBA,CAACA;IAEDJ,+BAAUA,GAAVA;QACIK,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,eAAeA,CAACA,UAAUA,CAACA,IAAIA,CAACA,SAASA,EAAEA,IAAIA,CAACA,QAAQA,CAACA,CAACA;QAE5EA,IAAIA,CAACA,QAAQA,IAAIA,CAACA,CAACA;QAEnBA,MAAMA,CAACA,MAAMA,CAACA;IAClBA,CAACA;IACLL,iBAACA;AAADA,CA3DA,AA2DCA,IAAA;AC9DD,AACA,iDADiD;IAC3C,kBAAkB;IAAxBM,SAAMA,kBAAkBA;IAqBxBC,CAACA;IATiBD,6BAAUA,GAAxBA,UAAyBA,OAAeA;QACpCE,IAAIA,OAAOA,GAAGA,IAAIA,CAACA,SAASA,CAACA,OAAOA,CAACA,CAACA;QAEtCA,EAAEA,CAACA,CAACA,OAAOA,IAAIA,SAASA,CAACA,CAACA,CAACA;YACvBA,MAAMA,CAACA,SAASA,CAACA;QACrBA,CAACA;QAEDA,MAAMA,CAACA,OAAOA,CAACA;IACnBA,CAACA;IAnBMF,4BAASA,GAAQA;QACpBA,WAAWA,EAAEA,yBAAyBA;QACtCA,WAAWA,EAAEA,qBAAqBA;QAClCA,WAAWA,EAAEA,yBAAyBA;QACtCA,WAAWA,EAAEA,4BAA4BA;QACzCA,WAAWA,EAAEA,mBAAmBA;QAChCA,WAAWA,EAAEA,wBAAwBA;QACrCA,WAAWA,EAAEA,2BAA2BA;QACxCA,WAAWA,EAAEA,8BAA8BA;KAC9CA,CAACA;IAWNA,yBAACA;AAADA,CArBA,AAqBCA,IAAA;ACtBD,sDAAsD;AAEtD,IAAM,QAAQ;IAAdG,SAAMA,QAAQA;IA4BdC,CAACA;IAxBGD,0BAAOA,GAAPA;QACIE,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,GAAGA,CAACA,IAAIA,IAAIA,CAACA,OAAOA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACrCA,MAAMA,gEAAgEA,CAACA;QAC3EA,CAACA;QAEDA,MAAMA,CAACA,GAAGA,GAAGA,CAACA,UAAUA,GAAGA,CAACA,IAAIA,CAACA,KAAKA,GAACA,GAAGA,GAACA,GAAGA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,CAACA,QAAQA,CAACA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA;IAC5FA,CAACA;IAEDF,mCAAmCA;IACnCA,2CAAwBA,GAAxBA;QACIG,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,GAAGA,CAACA,IAAIA,IAAIA,CAACA,OAAOA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACrCA,MAAMA,gEAAgEA,CAACA;QAC3EA,CAACA;QAEDA,MAAMA,CAACA,CAACA,MAAMA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,QAAQA,CAACA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,CAACA,MAAMA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,QAAQA,CAACA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA;IACjHA,CAACA;IAEDH,2BAAQA,GAARA;QACII,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,GAAGA,CAACA,IAAIA,IAAIA,CAACA,OAAOA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACrCA,MAAMA,gEAAgEA,CAACA;QAC3EA,CAACA;QAEDA,MAAMA,CAACA,kBAAkBA,CAACA,UAAUA,CAACA,IAAIA,CAACA,OAAOA,EAAEA,CAACA,CAACA;IACzDA,CAACA;IACLJ,eAACA;AAADA,CA5BA,AA4BCA,IAAA;AC9BD,sCAAsC;AAEtC,IAAM,YAAY;IAWdK,SAXEA,YAAYA;IAWCC,CAACA;IACpBD,mBAACA;AAADA,CAZA,AAYCA,IAAA;ACdD,+DAA+D;AAC/D,0CAA0C;AAE1C,IAAM,YAAY;IAKdE,SALEA,YAAYA,CAKFA,SAAqBA,EAAEA,eAAiCA,EAAEA,QAAwBA;QAC1FC,IAAIA,CAACA,SAASA,GAAGA,SAASA,CAACA;QAC3BA,IAAIA,CAACA,eAAeA,GAAGA,eAAeA,CAACA;QACvCA,IAAIA,CAACA,QAAQA,GAAGA,QAAQA,CAACA;IAC7BA,CAACA;IAEDD,yCAAkBA,GAAlBA,UAAmBA,GAAWA;QAC1BE,IAAIA,OAAOA,GAAiBA,IAAIA,CAACA,QAAQA,CAACA,GAAGA,CAACA,CAACA;QAE/CA,EAAEA,CAACA,CAACA,CAACA,OAAOA,IAAIA,OAAOA,CAACA,MAAMA,IAAIA,CAACA,CAACA,CAACA,CAACA;YAClCA,MAAMA,CAACA,SAASA,CAACA;QACrBA,CAACA;QAEDA,IAAIA,WAAWA,GAAGA,IAAIA,CAACA,eAAeA,CAACA,eAAeA,CAACA,IAAIA,CAACA,SAASA,EAAEA,OAAOA,CAACA,MAAMA,EAAEA,OAAOA,CAACA,MAAMA,CAACA,CAACA;QAEvGA,MAAMA,CAACA,WAAWA,CAACA,IAAIA,EAAEA,CAACA;IAC9BA,CAACA;IAEDF,yCAAkBA,GAAlBA,UAAmBA,GAAWA;QAC1BG,IAAIA,OAAOA,GAAiBA,IAAIA,CAACA,QAAQA,CAACA,GAAGA,CAACA,CAACA;QAE/CA,EAAEA,CAAAA,CAACA,CAACA,OAAOA,IAAIA,OAAOA,CAACA,MAAMA,KAAKA,CAACA,CAACA,CACpCA,CAACA;YACGA,MAAMA,CAACA,SAASA,CAACA;QACrBA,CAACA;QAEDA,MAAMA,CAACA,IAAIA,CAACA,eAAeA,CAACA,UAAUA,CAACA,IAAIA,CAACA,SAASA,EAAEA,OAAOA,CAACA,MAAMA,CAACA,CAACA;IAC3EA,CAACA;IACLH,mBAACA;AAADA,CAjCA,AAiCCA,IAAA;ACpCD,oDAAoD;AACpD,8CAA8C;AAE9C,IAAM,2BAA2B;IAAjCI,SAAMA,2BAA2BA;IAwDjCC,CAACA;IAtDGD,qDAAeA,GAAfA,UAAgBA,SAAqBA,EAAEA,QAAgBA,EAAEA,MAAcA;QACnEE,EAAEA,CAAAA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CACdA,CAACA;YACGA,MAAMA,2EAA2EA,CAACA;QACtFA,CAACA;QAEDA,EAAEA,CAAAA,CAACA,QAAQA,GAAGA,MAAMA,GAAGA,SAASA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACtCA,MAAMA,uFAAuFA,CAACA;QAClGA,CAACA;QAEDA,IAAIA,MAAMA,GAAUA,EAAEA,CAACA;QAEvBA,GAAGA,CAAAA,CAACA,GAAGA,CAACA,CAACA,GAAUA,CAACA,EAAEA,CAACA,GAAGA,MAAMA,EAAEA,CAACA,EAAEA,EACrCA,CAACA;YACGA,IAAIA,IAAIA,GAAGA,SAASA,CAACA,QAAQA,GAAGA,CAACA,CAACA,CAACA;YAEnCA,EAAEA,CAAAA,CAACA,IAAIA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBACZA,QAAQA,IAAKA,MAAMA,CAACA;gBACpBA,MAAMA,CAACA,MAAMA,CAACA;YAClBA,CAACA;YAEDA,MAAMA,IAAIA,MAAMA,CAACA,YAAYA,CAACA,IAAIA,CAACA,CAACA;QACxCA,CAACA;QAEDA,MAAMA,CAACA,MAAMA,CAACA;IAClBA,CAACA;IAEDF,gDAAUA,GAAVA,UAAWA,SAAqBA,EAAEA,QAAgBA;QAC9CG,EAAEA,CAACA,CAACA,QAAQA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACfA,MAAMA,wEAAwEA,CAACA;QACnFA,CAACA;QACDA,EAAEA,CAACA,CAACA,QAAQA,GAAGA,CAACA,GAAGA,SAASA,CAACA,MAAMA,CAACA,CAACA,CAACA;YAClCA,MAAMA,kFAAkFA,CAACA;QAC7FA,CAACA;QAEDA,MAAMA,CAACA,SAASA,CAACA,QAAQA,CAACA,GAAGA,CAACA,SAASA,CAACA,QAAQA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA;IACjEA,CAACA;IAEDH,gDAAUA,GAAVA,UAAWA,SAAqBA,EAAEA,QAAgBA;QAC9CI,EAAEA,CAACA,CAACA,QAAQA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACfA,MAAMA,wEAAwEA,CAACA;QACnFA,CAACA;QAEDA,EAAEA,CAACA,CAACA,QAAQA,GAAGA,CAACA,GAAGA,SAASA,CAACA,MAAMA,CAACA,CAACA,CAACA;YAClCA,MAAMA,kFAAkFA,CAACA;QAC7FA,CAACA;QAEDA,IAAIA,MAAMA,GAAGA,CAACA,SAASA,CAACA,QAAQA,CAACA,GACjCA,CAACA,SAASA,CAACA,QAAQA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,GAC/BA,CAACA,SAASA,CAACA,QAAQA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,CAACA,GACrCA,CAACA,SAASA,CAACA,QAAQA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,CAAEA,CAACA,CAACA;QAE9CA,MAAMA,CAACA,MAAMA,CAACA;IAClBA,CAACA;IACLJ,kCAACA;AAADA,CAxDA,AAwDCA,IAAA;AC3DD,oDAAoD;AACpD,2CAA2C;AAC3C,6CAA6C;ACF7C,IAAM,cAAc;IAApBK,SAAMA,cAAcA;IAOpBC,CAACA;IALiBD,mBAAIA,GAASA;QACvBA,SAASA,EAAEA,WAAWA;KACzBA,CAAAA;IAGLA,qBAACA;AAADA,CAPA,AAOCA,IAAA;ACPD,oDAAoD;AACpD,0CAA0C;AAC1C,6CAA6C;AAC7C,yCAAyC;AACzC,qDAAqD;AAErD,IAAM,mBAAmB;IAAzBE,SAAMA,mBAAmBA;IAsFzBC,CAACA;IApFGD,qCAAOA,GAAPA,UAAQA,MAAkBA;QAEtBE,EAAEA,CAAAA,CAACA,MAAMA,KAAKA,SAASA,CAACA,CACxBA,CAACA;YACGA,MAAMA,wDAAwDA,CAACA;QACnEA,CAACA;QAEDA,IAAIA,GAAGA,GAAGA,IAAIA,QAAQA,EAAEA,CAACA;QACzBA,GAAGA,CAACA,KAAKA,GAAGA,MAAMA,CAACA,UAAUA,EAAEA,CAACA;QAChCA,GAAGA,CAACA,OAAOA,GAAGA,MAAMA,CAACA,UAAUA,EAAEA,CAACA;QAElCA,MAAMA,CAACA,GAAGA,CAACA;IACfA,CAACA;IAEDF,yCAAWA,GAAXA,UAAYA,MAAkBA;QAC1BG,EAAEA,CAAAA,CAACA,MAAMA,KAAKA,SAASA,CAACA,CACxBA,CAACA;YACGA,MAAMA,wDAAwDA,CAACA;QACnEA,CAACA;QAEDA,IAAIA,OAAOA,GAAGA,IAAIA,YAAYA,EAAEA,CAACA;QAEjCA,IAAIA,GAAGA,GAAaA,IAAIA,CAACA,OAAOA,CAACA,MAAMA,CAACA,CAACA;QACzCA,OAAOA,CAACA,GAAGA,GAAGA,GAAGA,CAACA,OAAOA,EAAEA,CAACA;QAC5BA,OAAOA,CAACA,OAAOA,GAAGA,GAAGA,CAACA,QAAQA,EAAEA,CAACA;QACjCA,OAAOA,CAACA,aAAaA,GAAGA,GAAGA,CAACA,wBAAwBA,EAAEA,CAACA;QAEvDA,OAAOA,CAACA,EAAEA,GAAGA,MAAMA,CAACA,eAAeA,CAACA,CAACA,CAACA,CAACA;QAEvCA,IAAIA,mBAAmBA,GAAGA,IAAIA,CAACA,8BAA8BA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA;QAC1EA,EAAEA,CAAAA,CAACA,mBAAmBA,KAAKA,CAACA,CAACA,CAC7BA,CAACA;YACGA,OAAOA,CAACA,MAAMA,GAAGA,MAAMA,CAACA,UAAUA,EAAEA,CAACA;YACrCA,OAAOA,CAACA,MAAMA,GAAGA,MAAMA,CAACA,QAAQA,CAACA;QACrCA,CAACA;QACDA,IAAIA,CACJA,CAACA;YACGA,MAAMA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;YACfA,OAAOA,CAACA,MAAMA,GAAGA,MAAMA,CAACA,UAAUA,EAAEA,CAACA;YACrCA,OAAOA,CAACA,MAAMA,GAAGA,MAAMA,CAACA,QAAQA,CAACA;QACrCA,CAACA;QAEDA,EAAEA,CAAAA,CAACA,OAAOA,CAACA,MAAMA,KAAKA,UAAUA,CAACA,CACjCA,CAACA;YACGA,OAAOA,CAACA,iBAAiBA,GAAGA,IAAIA,CAACA;YAEjCA,EAAEA,CAAAA,CAACA,OAAOA,CAACA,GAAGA,KAAKA,cAAcA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA;gBAE/CA,AAEAA,yBAFyBA;gBAEzBA,MAAMA,CAACA,OAAOA,CAACA;YACnBA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBAEJA,AAEAA,0BAF0BA;gBAE1BA,MAAMA,CAACA,OAAOA,CAACA;YACnBA,CAACA;QACLA,CAACA;QAEDA,EAAEA,CAAAA,CAACA,OAAOA,CAACA,EAAEA,KAAKA,IAAIA,CAACA,CAACA,CAACA;QAEzBA,CAACA;QAEDA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,MAAMA,CAACA,CAACA;QAE5BA,MAAMA,CAACA,OAAOA,CAACA;IACnBA,CAACA;IAEDH,4DAA8BA,GAA9BA,UAA+BA,EAAEA;QAE7BI,EAAEA,CAAAA,CAAEA,EAAEA,KAAKA,IAAIA,IACXA,EAAEA,KAAKA,IAAIA,IACXA,EAAEA,KAAKA,IAAIA,IACXA,EAAEA,KAAKA,IAAIA,IACXA,EAAEA,KAAKA,IAAIA,IACXA,EAAEA,KAAKA,IAAIA,CAACA,CAChBA,CAACA;YACGA,MAAMA,CAACA,CAACA,CAACA;QACbA,CAACA;QACDA,IAAIA,CACJA,CAACA;YACGA,MAAMA,CAACA,CAACA,CAACA;QACbA,CAACA;IACLA,CAACA;IACLJ,0BAACA;AAADA,CAtFA,AAsFCA,IAAA;AC5FD,iDAAiD;AACjD,wCAAwC;AACxC,+DAA+D;AAC/D,0EAA0E;AAC1E,8DAA8D;AAC9D,0CAA0C;AAC1C,0CAA0C;AAG1C,IAAM,aAAa;IAAnBK,SAAMA,aAAaA;IAqDnBC,CAACA;IAnDGD,6BAAKA,GAALA,UAAMA,SAAqBA,EAAEA,MAAcA;QACvCE,IAAIA,kBAAkBA,GAAGA,IAAIA,UAAUA,CAACA,SAASA,EAAEA,IAAIA,2BAA2BA,EAAEA,CAACA,CAACA;QAEtFA,IAAIA,CAACA,iBAAiBA,CAACA,kBAAkBA,CAACA,CAACA;IAC/CA,CAACA;IAEDF,6GAA6GA;IAC7GA,+CAA+CA;IACvCA,yCAAiBA,GAAzBA,UAA0BA,MAAkBA;QACxCG,IAAIA,CAACA,iBAAiBA,CAACA,MAAMA,CAACA,CAACA;QAE/BA,IAAIA,WAAWA,GAAGA,IAAIA,mBAAmBA,EAAEA,CAACA;QAE5CA,IAAIA,QAAQA,GAAmBA,EAAEA,CAACA;QAElCA,OAAMA,MAAMA,CAACA,QAAQA,GAAGA,MAAMA,CAACA,SAASA,CAACA,MAAMA,EAAEA,CAACA;YAC9CA,IAAIA,QAAQA,GAAWA,MAAMA,CAACA,QAAQA,CAACA;YAEvCA,IAAIA,OAAOA,GAAiBA,WAAWA,CAACA,WAAWA,CAACA,MAAMA,CAACA,CAACA;YAE5DA,EAAEA,CAAAA,CAACA,OAAOA,CAACA,GAAGA,GAAGA,WAAWA,CAACA,CAACA,CAACA;gBAC3BA,MAAMA,CAACA,QAAQA,GAAGA,QAAQA,CAACA;gBAC3BA,KAAKA,CAACA;YACVA,CAACA;YAEDA,QAAQA,CAACA,OAAOA,CAACA,GAAGA,CAACA,GAAGA,OAAOA,CAACA;YAChCA,QAAQA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;QAC3BA,CAACA;QAEDA,IAAIA,OAAOA,GAAGA,IAAIA,YAAYA,CAACA,MAAMA,CAACA,SAASA,EAAEA,MAAMA,CAACA,eAAeA,EAAEA,QAAQA,CAACA,CAACA;QAEnFA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,QAAQA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;YACvCA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,EAAEA,IAAIA,IAAIA,CAACA,CAACA,CAACA;gBACzBA,OAAOA,CAACA,KAAKA,CAACA,EAAEA,EAAEA,QAAQA,CAACA,CAACA,CAACA,EAAEA,OAAOA,CAACA,kBAAkBA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;YAChFA,CAACA;YACDA,IAAIA,CAACA,CAACA;gBACFA,OAAOA,CAACA,KAAKA,CAACA,EAAEA,EAAEA,QAAQA,CAACA,CAACA,CAACA,EAAEA,OAAOA,CAACA,kBAAkBA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;YAChFA,CAACA;QACLA,CAACA;IACLA,CAACA;IAEOH,yCAAiBA,GAAzBA,UAA0BA,MAAkBA;QACxCI,MAAMA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;QACjBA,IAAIA,MAAMA,GAAGA,MAAMA,CAACA,eAAeA,CAACA,CAACA,CAACA,CAACA;QAEvCA,OAAOA,CAACA,KAAKA,CAACA,MAAMA,CAACA,CAACA;QAEtBA,EAAEA,CAACA,CAACA,MAAMA,KAAKA,MAAMA,CAACA,CAACA,CAACA;YACpBA,MAAMA,wDAAwDA,CAACA;QACnEA,CAACA;IACLA,CAACA;IACLJ,oBAACA;AAADA,CArDA,AAqDCA,IAAA","file":"jsDicomParser.js","sourcesContent":["/// <reference path=\"./typing/browserify.d.ts\" />\r\n/// <reference path=\"./ByteArrayParsers/IByteArrayParser.ts\" />\r\n\r\nclass ByteStream {\r\n\r\n    position: number;\r\n    byteArray: Uint8Array;\r\n    byteArrayParser: IByteArrayParser;\r\n\r\n    constructor(byteArray: Uint8Array, byteArrayParser: IByteArrayParser, position?: number) {\r\n        if (byteArray === undefined) {\r\n            throw \"ByteStream: missing required parameter 'byteArray'\";\r\n        }\r\n        if ((byteArray instanceof Uint8Array) === false) {\r\n            throw 'ByteStream: byteArray should be instance of Uint8Array';\r\n        }\r\n        if (position < 0) {\r\n            throw \"ByteStream: position cannot be less than 0\";\r\n        }\r\n        if (position >= byteArray.length) {\r\n            throw \"ByteStream: position cannot be more than or equal to byteArray.length\";\r\n\r\n        }\r\n        if (byteArrayParser === undefined) {\r\n            throw \"ByteStream: missing required parameter 'byteArrayParser'\";\r\n        }\r\n\r\n        this.byteArray = byteArray;\r\n        this.position = position ? position : 0;\r\n        this.byteArrayParser = byteArrayParser;\r\n    }\r\n\r\n    seek(offset: number) {\r\n        if (this.position + offset < 0) {\r\n            throw \"ByteStream: cannot seek to position < 0\";\r\n        }\r\n\r\n        this.position += offset;\r\n    }\r\n\r\n    readFixedString(length: number) {\r\n        var result = this.byteArrayParser.ReadFixedString(this.byteArray, this.position, length);\r\n        this.position += length;\r\n\r\n        return result;\r\n    }\r\n\r\n    readUint16() {\r\n        var result = this.byteArrayParser.readUint16(this.byteArray, this.position);\r\n        \r\n        this.position += 2;\r\n\r\n        return result;        \r\n    }\r\n\r\n    readUint32() {\r\n        var result = this.byteArrayParser.readUint32(this.byteArray, this.position);\r\n        \r\n        this.position += 4;\r\n\r\n        return result;        \r\n    }    \r\n}","// Just for tags recogniction, not for prodaction\r\nclass DicomTagsReference {\r\n    static dicomTags: any = {\r\n        \"x00020000\": \"FileMetaInfoGroupLength\",\r\n        \"x00020001\": \"FileMetaInfoVersion\",\r\n        \"x00020002\": \"MediaStorageSOPClassUID\",\r\n        \"x00020003\": \"MediaStorageSOPInstanceUID\",\r\n        \"x00020010\": \"TransferSyntaxUID\",\r\n        \"x00020012\": \"ImplementationClassUID\",\r\n        \"x00020013\": \"ImplementationVersionName\",\r\n        \"x00020016\": \"SourceApplicationEntityTitle\"        \r\n    };\r\n\r\n    public static GetTagName(tagCode: string) {\r\n        var tagName = this.dicomTags[tagCode];\r\n\r\n        if (tagName == undefined) {\r\n            return \"unknown\";\r\n        }\r\n\r\n        return tagName;\r\n    }\r\n}","/// <reference path=\"./utils/DicomTagsReference.ts\" />\r\n\r\nclass DicomTag {\r\n    group: number;\r\n    element: number;\r\n\r\n    getCode():string {\r\n        if (this.group < 0 || this.element < 0) {\r\n            throw \"DicomTag.getCode: tag number and group must be positive number\";\r\n        }\r\n\r\n        return \"x\" + ('00000000' + (this.group*256*256 + this.element).toString(16)).substr(-8);\r\n    }\r\n\r\n    // format for search on DicomLookup\r\n    getDicomLookupSearchCode():string {\r\n        if (this.group < 0 || this.element < 0) {\r\n            throw \"DicomTag.getCode: tag number and group must be positive number\";\r\n        }\r\n\r\n        return ('0000' + this.group.toString(16)).substr(-4) + \",\" + ('0000' + this.element.toString(16)).substr(-4);\r\n    }\r\n\r\n    findName():string {\r\n        if (this.group < 0 || this.element < 0) {\r\n            throw \"DicomTag.getCode: tag number and group must be positive number\";\r\n        }\r\n\r\n        return DicomTagsReference.GetTagName(this.getCode());\r\n    }\r\n}","/// <reference path=\"./DicomTag.ts\" />\r\n\r\nclass DicomElement {\r\n    tag: string;\r\n\r\n    tagSearchCode: string;\r\n    tagName: string;\r\n\r\n    vr: string;\r\n    length: number;\r\n    isUndefinedLength: boolean;\r\n    offset: number;\r\n\r\n    constructor() {}\r\n}","/// <reference path=\"./ByteArrayParsers/IByteArrayParser.ts\" />\r\n/// <reference path=\"./DicomElement.ts\" />\r\n\r\nclass DicomDataSet {\r\n    byteArray: Uint8Array;\r\n    byteArrayParser: IByteArrayParser;\r\n    elements: DicomElement[];\r\n\r\n    constructor(byteArray: Uint8Array, byteArrayParser: IByteArrayParser, elements: DicomElement[]) {\r\n        this.byteArray = byteArray;\r\n        this.byteArrayParser = byteArrayParser;\r\n        this.elements = elements;\r\n    }\r\n\r\n    getElementAsString(tag: string) {\r\n        var element: DicomElement = this.elements[tag];\r\n\r\n        if (!element || element.length <= 0) {\r\n            return undefined;\r\n        }\r\n\r\n        var fixedString = this.byteArrayParser.ReadFixedString(this.byteArray, element.offset, element.length);\r\n\r\n        return fixedString.trim();\r\n    }\r\n\r\n    getElementAsUint32(tag: string) {\r\n        var element: DicomElement = this.elements[tag];        \r\n\r\n        if(!element || element.length === 0)\r\n        {\r\n            return undefined;\r\n        }\r\n\r\n        return this.byteArrayParser.readUint32(this.byteArray, element.offset);        \r\n    }\r\n}","/// <reference path=\"./../typing/browserify.d.ts\" />\r\n/// <reference path=\"./IByteArrayParser.ts\" />\r\n\r\nclass LittleEndianByteArrayParser implements IByteArrayParser {\r\n\r\n    ReadFixedString(byteArray: Uint8Array, position: number, length: number):string {\r\n        if(length < 0)\r\n        {\r\n            throw 'LittleEndianByteArrayParser.ReadFixedString: length cannot be less than 0';\r\n        }\r\n\r\n        if(position + length > byteArray.length) {\r\n            throw 'LittleEndianByteArrayParser.ReadFixedString: length cannot be more than buffer.length';\r\n        }\r\n\r\n        var result:string = \"\";\r\n\r\n        for(var i:number = 0; i < length; i++)\r\n        {\r\n            var byte = byteArray[position + i];\r\n\r\n            if(byte === 0) {\r\n                position +=  length;\r\n                return result;\r\n            }\r\n\r\n            result += String.fromCharCode(byte);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    readUint16(byteArray: Uint8Array, position: number):number {\r\n        if (position < 0) {\r\n            throw 'LittleEndianByteArrayParser.readUint16: position cannot be less than 0';\r\n        }\r\n        if (position + 2 > byteArray.length) {\r\n            throw 'LittleEndianByteArrayParser.readUint16: length cannot be more than buffer.length';\r\n        }\r\n\r\n        return byteArray[position] + (byteArray[position + 1] * 256);        \r\n    }\r\n\r\n    readUint32(byteArray: Uint8Array, position: number):number {\r\n        if (position < 0) {\r\n            throw 'LittleEndianByteArrayParser.readUint16: position cannot be less than 0';\r\n        }\r\n\r\n        if (position + 4 > byteArray.length) {\r\n            throw 'LittleEndianByteArrayParser.readUint16: length cannot be more than buffer.length';\r\n        }\r\n\r\n        var uint32 = (byteArray[position] +\r\n        (byteArray[position + 1] * 256) +\r\n        (byteArray[position + 2] * 256 * 256) +\r\n        (byteArray[position + 3] * 256 * 256 * 256 ));\r\n\r\n        return uint32;\r\n    }    \r\n}","/// <reference path=\"./../typing/browserify.d.ts\" />\r\n/// <reference path=\"./../ByteStream.ts\" />\r\n/// <reference path=\"./../DicomElement.ts\" />\r\n\r\ninterface IDicomReader {\r\n    readTag(byteStream: ByteStream): DicomTag;\r\n    readElement(byteStream: ByteStream): DicomElement;\r\n}","class DicomConstants {\r\n\r\n    public static Tags: any  = {\r\n        PixelData: \"x7fe00010\",\r\n    }\r\n\r\n    \r\n}","/// <reference path=\"./../typing/browserify.d.ts\" />\r\n/// <reference path=\"./IDicomReader.ts\" />\r\n/// <reference path=\"./../DicomElement.ts\" />\r\n/// <reference path=\"./../DicomTag.ts\" />\r\n/// <reference path=\"./../utils/DicomConstants.ts\" />\r\n\r\nclass ExplicitDicomReader implements IDicomReader {\r\n\r\n    readTag(stream: ByteStream):DicomTag {\r\n\r\n        if(stream === undefined)\r\n        {\r\n            throw \"ExplicitDicomReader.readTag: stream can't be undefined\";\r\n        }\r\n\r\n        var tag = new DicomTag();\r\n        tag.group = stream.readUint16();\r\n        tag.element = stream.readUint16();\r\n\r\n        return tag;\r\n    }\r\n\r\n    readElement(stream: ByteStream): DicomElement {\r\n        if(stream === undefined)\r\n        {\r\n            throw \"ExplicitDicomReader.readTag: stream can't be undefined\";\r\n        }\r\n\r\n        var element = new DicomElement();\r\n        \r\n        var tag: DicomTag = this.readTag(stream);\r\n        element.tag = tag.getCode();\r\n        element.tagName = tag.findName();\r\n        element.tagSearchCode = tag.getDicomLookupSearchCode();\r\n\r\n        element.vr = stream.readFixedString(2);\r\n\r\n        var dataLengthSizeBytes = this._getDataLengthSizeInBytesForVR(element.vr);\r\n        if(dataLengthSizeBytes === 2)\r\n        {\r\n            element.length = stream.readUint16();\r\n            element.offset = stream.position;\r\n        }\r\n        else\r\n        {\r\n            stream.seek(2);\r\n            element.length = stream.readUint32();\r\n            element.offset = stream.position;\r\n        }\r\n\r\n        if(element.length === 4294967295)\r\n        {\r\n            element.isUndefinedLength = true;\r\n\r\n            if(element.tag === DicomConstants.Tags.PixelData) {\r\n\r\n                // find image pixels size\r\n                \r\n                return element;\r\n            } else {\r\n\r\n                // find item delimitation \r\n\r\n                return element;\r\n            }            \r\n        }\r\n\r\n        if(element.vr === 'SQ') {\r\n            // read the sequence\r\n        }\r\n        \r\n        stream.seek(element.length);\r\n        \r\n        return element;\r\n    }\r\n\r\n    _getDataLengthSizeInBytesForVR(vr)\r\n    {\r\n        if( vr === 'OB' ||\r\n            vr === 'OW' ||\r\n            vr === 'SQ' ||\r\n            vr === 'OF' ||\r\n            vr === 'UT' ||\r\n            vr === 'UN')\r\n        {\r\n            return 4;\r\n        }\r\n        else\r\n        {\r\n            return 2;\r\n        }\r\n    }\r\n}","/// <reference path=\"./typing/browserify.d.ts\" />\r\n/// <reference path=\"./ByteStream.ts\" />\r\n/// <reference path=\"./ByteArrayParsers/IByteArrayParser.ts\" />\r\n/// <reference path=\"./ByteArrayParsers/LittleEndianByteArrayParser.ts\" />\r\n/// <reference path=\"./DicomReaders/ExplicitDicomReader.ts\" />\r\n/// <reference path=\"./DicomElement.ts\" />\r\n/// <reference path=\"./DicomDataSet.ts\" />\r\n\r\n\r\nclass JsDicomParser {\r\n\r\n    parse(byteArray: Uint8Array, option?: any[]) {\r\n        var littleEndianStream = new ByteStream(byteArray, new LittleEndianByteArrayParser());\r\n\r\n        this._readPart10Header(littleEndianStream);\r\n    }    \r\n\r\n    // read dicom header according to PS3.10 (http://medical.nema.org/dicom/2013/output/chtml/part10/PS3.10.html)\r\n    // Spoiler: always in Explicit VR Little Endian\r\n    private _readPart10Header(stream: ByteStream) {\r\n        this._checkDicomPrefix(stream);\r\n\r\n        var dicomReader = new ExplicitDicomReader();\r\n\r\n        var elements: DicomElement[] = [];\r\n\r\n        while(stream.position < stream.byteArray.length) {\r\n            var position: number = stream.position;\r\n\r\n            var element: DicomElement = dicomReader.readElement(stream);\r\n\r\n            if(element.tag > 'x0002ffff') {\r\n                stream.position = position;\r\n                break;\r\n            }\r\n\r\n            elements[element.tag] = element;\r\n            elements.push(element);\r\n        }\r\n\r\n        var dataSet = new DicomDataSet(stream.byteArray, stream.byteArrayParser, elements);\r\n\r\n        for (var i = 0; i < elements.length; i++) {\r\n            if (elements[i].vr == \"UL\") {\r\n                console.debug(\"\", elements[i], dataSet.getElementAsUint32(elements[i].tag));\r\n            }\r\n            else {\r\n                console.debug(\"\", elements[i], dataSet.getElementAsString(elements[i].tag));\r\n            }\r\n        }\r\n    }\r\n\r\n    private _checkDicomPrefix(stream: ByteStream) {\r\n        stream.seek(128);\r\n        var prefix = stream.readFixedString(4);\r\n\r\n        console.debug(prefix);\r\n\r\n        if (prefix !== \"DICM\") {\r\n            throw \"JsDicomParser._checkDicomPrefix: DICM prefix not found\";\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}